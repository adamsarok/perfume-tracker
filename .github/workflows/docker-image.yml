name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
  
jobs:

  build:

    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: perfumes_test
        ports:
          - 5432:5432

    steps:
    - name: Check out the repo
      uses: actions/checkout@v4
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      working-directory: ./perfumetracker.client
      run: npm ci --legacy-peer-deps
      
    - name: Build nextJS app
      working-directory: ./perfumetracker.client
      env:
        DATABASE_URL: "postgresql://localhost:9999/placeholder"
        OPENAI_API_KEY: "placeholder"
      run: npm run build
    
    - name: Build and push nextJS app Docker image
      uses: docker/build-push-action@v6
      env:
        DATABASE_URL: "postgresql://localhost:9999/placeholder"
      with:
        context: ./perfumetracker.client
        file: ./perfumetracker.client/Dockerfile
        push: true
        tags: adamsarok/perfume-tracker:latest
        
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 9.0

    - name: Build API
      working-directory: ./PerfumeTracker.Server
      env:
        Metabase__Url: "localhost"
        Metabase__SecretKey: "dummy_secret_dummy_secret_dummy_secret_dummy_secret_dummy_secret_dummy_secret_dummy_secret"
        ConnectionStrings__DefaultConnection: ${{ secrets.POSTGRES_CONNSTR }}
      run: dotnet build

    - name: Install EF Core CLI tools
      run: dotnet tool install --global dotnet-ef

    - name: Update database
      working-directory: ./PerfumeTracker.Server
      env:
       ConnectionStrings__DefaultConnection: ${{ secrets.POSTGRES_CONNSTR }}
      run: dotnet ef database update

    - name: Run tests with coverage
      working-directory: ./PerfumeTracker.xTests
      env:
       Metabase__Url: "localhost"
       Metabase__SecretKey: "dummy_secret_dummy_secret_dummy_secret_dummy_secret_dummy_secret_dummy_secret_dummy_secret"
       ConnectionStrings__DefaultConnection: ${{ secrets.POSTGRES_CONNSTR }}
      run: dotnet test --configuration Release --collect:"XPlat Code Coverage" --settings coverlet.runsettings

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

    - name: Build and push API Docker image
      uses: docker/build-push-action@v6
      env:
        ConnectionStrings__DefaultConnection: "postgresql://localhost:9999/placeholder"
      with:
        context: ./PerfumeTracker.Server
        file: ./PerfumeTracker.Server/Dockerfile
        push: true
        tags: adamsarok/perfume-tracker-api:latest
